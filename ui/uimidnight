local MinhaLib = {
    Themes = {
        Default = {
            ["Color Hub 1"] = ColorSequence.new({
                ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)),
                ColorSequenceKeypoint.new(0.50, Color3.fromRGB(15, 15, 15)),
                ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 0, 0))
            }),
            ["Color Hub 2"] = Color3.fromRGB(15, 15, 15),
            ["Color Stroke"] = Color3.fromRGB(40, 40, 40),
            ["Color Theme"] = Color3.fromRGB(255, 0, 0),
            ["Color Text"] = Color3.fromRGB(255, 255, 255),
            ["Color Dark Text"] = Color3.fromRGB(180, 180, 180)
        }
    },
    Info = {
        Version = "1.0.0"
    },
    Save = {
        UISize = {550, 380},
        TabSize = 160,
        Theme = "Default"
    },
    Settings = {},
    Connection = {},
    Instances = {},
    Elements = {},
    Options = {},
    Flags = {},
    Tabs = {}
}

local CoreGui = game:GetService("CoreGui")

local function InsertTheme(Instance, Type)
    table.insert(MinhaLib.Instances, {
        Instance = Instance,
        Type = Type
    })
    return Instance
end

local function SetProps(Instance, Props)
    if Props then
        for prop, value in pairs(Props) do
            Instance[prop] = value
        end
    end
    return Instance
end

local function SetChildren(Instance, Children)
    if Children then
        for _, child in pairs(Children) do
            child.Parent = Instance
        end
    end
    return Instance
end

local function Create(class, props, children)
    local new = Instance.new(class)
    SetProps(new, props)
    SetChildren(new, children)
    return new
end

function MinhaLib:MakeWindow(cfg)
    cfg = cfg or {}
    local theme = self.Themes[self.Save.Theme]

    local ScreenGui = Create("ScreenGui", {
        Name = cfg.Title or "MinhaLib",
        Parent = CoreGui
    })

    local Main = Create("Frame", {
        Parent = ScreenGui,
        Size = UDim2.new(0, self.Save.UISize[1], 0, self.Save.UISize[2]),
        Position = UDim2.new(0.5, -self.Save.UISize[1]/2, 0.5, -self.Save.UISize[2]/2),
        BackgroundColor3 = theme["Color Hub 2"],
        BorderSizePixel = 0
    })

    local Title = Create("TextLabel", {
        Parent = Main,
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundTransparency = 1,
        Text = (cfg.Title or "MinhaLib") .. (cfg.SubTitle and (" - " .. cfg.SubTitle) or ""),
        TextColor3 = theme["Color Text"],
        Font = Enum.Font.GothamBold,
        TextSize = 14
    })

    return Main
end

function MinhaLib:CreateTab(parent, name)
    local theme = self.Themes[self.Save.Theme]
    return Create("TextButton", {
        Parent = parent,
        Size = UDim2.new(0, self.Save.TabSize, 0, 30),
        BackgroundColor3 = theme["Color Hub 2"],
        TextColor3 = theme["Color Text"],
        Text = name,
        Font = Enum.Font.Gotham,
        TextSize = 14
    })
end

function MinhaLib:CreateButton(parent, cfg)
    local theme = self.Themes[self.Save.Theme]
    local Button = Create("TextButton", {
        Parent = parent,
        Size = UDim2.new(0, 150, 0, 30),
        BackgroundColor3 = theme["Color Theme"],
        TextColor3 = theme["Color Text"],
        Text = cfg.Text or "Bot√£o",
        Font = Enum.Font.Gotham,
        TextSize = 14
    })
    Button.MouseButton1Click:Connect(cfg.Callback or function() end)
    return Button
end

function MinhaLib:CreateToggle(parent, cfg)
    local theme = self.Themes[self.Save.Theme]
    local Toggle = Create("TextButton", {
        Parent = parent,
        Size = UDim2.new(0, 150, 0, 30),
        BackgroundColor3 = theme["Color Hub 2"],
        TextColor3 = theme["Color Text"],
        Text = "[OFF] " .. (cfg.Text or "Toggle"),
        Font = Enum.Font.Gotham,
        TextSize = 14
    })
    local state = false
    Toggle.MouseButton1Click:Connect(function()
        state = not state
        Toggle.Text = (state and "[ON] " or "[OFF] ") .. (cfg.Text or "Toggle")
        if cfg.Callback then cfg.Callback(state) end
    end)
    return Toggle
end

return MinhaLib
